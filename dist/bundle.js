var y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var w=y((te,x)=>{function W(e){let t=/<svg[^>]*>(.*?)<\/svg>/s,s=/<defs>(.*?)<\/defs>/s,a=/<style[^>]*>(.*?)<\/style>/s,i=e.match(t);if(!i||i.length<2)return null;let n=i[1],r="",l=n.match(a);l&&(r=l[1],n=n.replace(a,""));let o="",c=n.match(s);return c&&(o=c[1],n=n.replace(s,"")),{style:r,defs:o,mainContent:n.trim()}}x.exports={extractSvgContentAndDefs:W}});var $=y((se,C)=>{function N(e){return typeof e=="string"&&/^[nd][0-6][0-4][0-2]$/.test(e)}function j(e){return!isNaN(e)&&e>=0&&e<360}C.exports={isValidWeatherCode:N,isValidAngle:j}});var q=y((ne,I)=>{var V=require("fs").promises,b=require("path"),{optimize:E}=require("svgo"),{extractSvgContentAndDefs:A}=w(),{isValidWeatherCode:z,isValidAngle:F}=$();function M(e,t,s){if(![4,6].includes(s)){let a=t==="d"?"sun":"moon";e.push({name:a,x:0,y:0,scale:1})}}function H(e,t){let s={1:{name:"cloud-1",x:20,y:0,scale:.7},2:{name:"cloud-1",x:5,y:5,scale:1},3:{name:"cloud-3",x:0,y:0,scale:1.2},4:{name:"cloud-3",x:0,y:0,scale:1.5},5:{name:"cloud-5",x:0,y:0,scale:1},6:{name:"cloud-6",x:0,y:0,scale:1}};s[t]&&e.push(s[t])}function L(e,t,s){if(t<=0||t>4||s<0||s>2)return;let a=[1,.9,.8];t===4&&(e.push({name:"thunderbolt",x:30,y:30,scale:1}),t=2);let i=a[t-1];[{name:"rain",xOffset:10,yOffset:-1},{name:"snow",xOffset:15,yOffset:1}].forEach((r,l)=>{if(s===1||s===l)for(let o=0;o<t;o++)e.push({name:r.name,x:o*r.xOffset,y:20+o*r.yOffset,scale:i})})}function X(e){if(!z(e)){let c=new Error("Invalid Vaisala weather code format.");throw c.statusCode=400,c}let[t,s,a,i]=e,n=parseInt(s,10),r=parseInt(a,10),l=parseInt(i,10),o=[];return M(o,t,n),H(o,n),L(o,r,l),o}async function Y(e,t,s=!1){if(!F(e)){let n=new Error("Invalid angle parameter for wind direction SVG.");throw n.statusCode=400,n}let a="wind-arrow",i=b.join(t,`${a}.svg`);try{let n=await V.readFile(i,"utf8"),r=A(n);if(!r){let f=new Error(`Error parsing ${a}.svg: Invalid SVG structure.`);throw f.statusCode=500,f}let c=`
            <svg width="64" height="64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <style type="text/css">${r.style}</style>
                    ${r.defs}
                </defs>
                <g transform="translate(20 20)">
                    <g transform="rotate(${e} 12 12)">
                        ${r.mainContent}
                    </g>
                </g>
            </svg>
        `;return s?c:E(c,{multipass:!0}).data}catch(n){console.error("Error loading or processing wind arrow symbol:",n);let r=new Error("Failed to generate wind direction SVG.");throw r.statusCode=500,r}}async function k(e,t,s,a=!1){let{viewBox:i="0 0 64 64",width:n="64",height:r="64"}=t,l=X(e);if(l.length===0){let o=new Error("Invalid or unprocessable Vaisala weather code resulted in no components.");throw o.statusCode=400,o}try{let o=l.map(async u=>{let p=b.join(s,`${u.name}.svg`);try{return await V.readFile(p,"utf8")}catch{return console.warn(`Warning: SVG element '${u.name}.svg' not found at ${p}. It will be skipped.`),null}}),c=await Promise.all(o),h="",f="",v=new Set;c.forEach((u,p)=>{if(!u)return;let d=l[p],m=A(u);if(m){f+=`${m.style}
`,m.defs&&v.add(m.defs);let P=`translate(${d.x||0} ${d.y||0}) scale(${d.scale||1})`+(d.rotation?` rotate(${d.rotation.angle} ${d.rotation.cx} ${d.rotation.cy})`:"");h+=`<g transform="${P}">${m.mainContent}</g>`}});let S=`
            <svg width="${n}" height="${r}" viewBox="${i}" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <style type="text/css">
                        ${f}
                    </style>
                    ${Array.from(v).join("")}
                </defs>
                ${h}
            </svg>
        `;return a?S:E(S,{multipass:!0}).data}catch(o){console.error("Error in getVaisalaSymbolSvg:",o);let c=new Error("Failed to generate Vaisala symbol SVG.");throw c.statusCode=500,c}}I.exports={getWindArrowSvg:Y,getVaisalaSymbolSvg:k}});var T=y((re,O)=>{function J(e){return typeof e!="string"&&typeof e!="boolean"&&typeof e!="number"?!1:/^(?:y|yes|true|1|on)$/i.test(String(e).toLowerCase())}O.exports={yn:J}});var K=require("express"),G=require("path"),R=q(),{yn:Q}=T(),{extractSvgContentAndDefs:oe}=w(),g=K(),D=process.env.PORT||4e3,_=Q(process.env.NOOPTSVG||""),B=G.join(__dirname,"..","assets"),U=G.join(B,"elements");g.set("svgAssetsDir",B);g.set("svgElementsDir",U);g.get("/wind_direction/:angle",async(e,t)=>{try{let{angle:s}=e.params,a=await R.getWindArrowSvg(parseInt(s,10),g.get("svgAssetsDir"),_);t.setHeader("Content-Type","image/svg+xml"),t.send(a)}catch(s){console.error("Error in wind direction SVG endpoint:",s),t.status(s.statusCode||500).send(s.message||"Server error")}});g.get("/weather_symbol/:weather_code",async(e,t)=>{try{let{weather_code:s}=e.params,{viewBox:a,width:i,height:n}=e.query,r=await R.getVaisalaSymbolSvg(s,{viewBox:a,width:i,height:n},g.get("svgElementsDir"),_);t.setHeader("Content-Type","image/svg+xml"),t.send(r)}catch(s){console.error("Error in Vaisala symbol endpoint:",s),t.status(s.statusCode||500).send(s.message||"Server error")}});g.get("/",(e,t)=>{let s=new Date().toISOString();t.send(`${s}: SVG Server is running!`)});g.listen(D,()=>{console.log(`SVG server running at http://localhost:${D}`)});
